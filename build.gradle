buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		jcenter()
		mavenCentral()
		maven { url = 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath 'com.wynprice.cursemaven:CurseMaven:2.1.3'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.wynprice.cursemaven'
apply plugin: 'eclipse'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}


def modID = "foamfix"
archivesBaseName = "$modID-Forge"
version = '0.13.4'

minecraft {
	mappings channel: 'snapshot', version: '20200225-1.15.1'

	runs {
		client {
			workingDirectory project.file('run')

			args '--mixin.config', "${modID}.mixins.json".toString()
			//property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				"$modID" {//Groovy short hand for create(modID)
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('runServer')

			args '--mixin.config', "${modID}.mixins.json".toString()
			//property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				"$modID" {
					source sourceSets.main
				}
			}
		}
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spongepowered.org/maven' }
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.15.2-31.1.77'

	implementation 'org.spongepowered:mixin:0.8.1-SNAPSHOT'
	implementation fg.deobf('curse.maven:refined-pipes:2952347')
}

mixin {
	add sourceSets.main, "mixins.${modID}.refmap.json"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
	manifest {
		attributes([
			'Specification-Title': "$modID",
			'Specification-Vendor': 'asie',
			'Specification-Version': '1',
			'Implementation-Title': project.name,
			'Implementation-Version': "$version",
			'Implementation-Vendor' : 'Chocohead',
			'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			'MixinConnector': 'pl.asie.foamfix.FoamyMixinConnector'
		])
	}
}

jar.finalizedBy 'reobfJar'